#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ููุฒุงุช ุชุญููู ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ
"""

from database_manager import DatabaseManager
from datetime import datetime
import pandas as pd

def test_shipping_features():
    """ุงุฎุชุจุงุฑ ููุฒุงุช ุชุญููู ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ"""
    
    print("๐งช ุงุฎุชุจุงุฑ ููุฒุงุช ุชุญููู ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ")
    print("=" * 50)
    
    db_manager = DatabaseManager()
    
    # 1. ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุชุตุฏูุฑ
    print("\n1๏ธโฃ ุงุฎุชุจุงุฑ ุฅุญุตุงุฆูุงุช ุงูุชุตุฏูุฑ:")
    print("-" * 30)
    
    export_stats = db_manager.get_export_stats()
    if export_stats:
        print(f"โ ุฅุฌูุงูู ุงูุทูุจุงุช: {export_stats['total_invoices']}")
        print(f"โ ุงูุทูุจุงุช ุงููุตุฏุฑุฉ: {export_stats['exported_invoices']}")
        print(f"โ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ: {export_stats['new_invoices']}")
        
        if export_stats['last_export']:
            last_export_date, last_export_type, last_export_count = export_stats['last_export']
            print(f"โ ุขุฎุฑ ุชุตุฏูุฑ: {last_export_date} - {last_export_type} - {last_export_count} ุทูุจ")
        else:
            print("โน๏ธ ูุง ุชูุฌุฏ ุชุตุฏูุฑุงุช ุณุงุจูุฉ")
    else:
        print("โ ูุดู ูู ุงูุญุตูู ุนูู ุฅุญุตุงุฆูุงุช ุงูุชุตุฏูุฑ")
    
    # 2. ุงุฎุชุจุงุฑ ุงูุญุตูู ุนูู ุงูุทูุจุงุช ููุชุฑุงุช ูุฎุชููุฉ
    print("\n2๏ธโฃ ุงุฎุชุจุงุฑ ุงูุญุตูู ุนูู ุงูุทูุจุงุช ููุชุฑุงุช ูุฎุชููุฉ:")
    print("-" * 40)
    
    periods = [
        (1, "ุขุฎุฑ 24 ุณุงุนุฉ"),
        (2, "ุขุฎุฑ ููููู"),
        (7, "ุขุฎุฑ ุฃุณุจูุน"),
        (30, "ุขุฎุฑ ุดูุฑ"),
        (90, "ุขุฎุฑ 3 ุดููุฑ")
    ]
    
    for days, period_name in periods:
        df = db_manager.get_all_invoices_for_shipping(days, "period")
        count = len(df) if df is not None else 0
        print(f"โ {period_name}: {count} ุทูุจ")
    
    # 3. ุงุฎุชุจุงุฑ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ ููุท
    print("\n3๏ธโฃ ุงุฎุชุจุงุฑ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ ููุท:")
    print("-" * 30)
    
    df_new = db_manager.get_all_invoices_for_shipping(0, "new_only")
    new_count = len(df_new) if df_new is not None else 0
    print(f"โ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ (ุบูุฑ ูุตุฏุฑุฉ): {new_count} ุทูุจ")
    
    if new_count > 0:
        print("๐ ุชูุงุตูู ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ:")
        for i, (_, row) in enumerate(df_new.head(3).iterrows(), 1):
            print(f"   {i}. {row['receipt_number']} - {row['client_name']} - {row['governorate']}")
    
    # 4. ุงุฎุชุจุงุฑ ุฅูุดุงุก ููู ุชุฌุฑูุจู
    print("\n4๏ธโฃ ุงุฎุชุจุงุฑ ุฅูุดุงุก ููู ุชุฌุฑูุจู:")
    print("-" * 30)
    
    try:
        # ุฅูุดุงุก ููู ููุทูุจุงุช ุงูุฌุฏูุฏุฉ ููุท
        filename = db_manager.create_shipping_excel(0, "new_only", 12345)  # user_id ุชุฌุฑูุจู
        
        if filename:
            print(f"โ ุชู ุฅูุดุงุก ุงูููู: {filename}")
            
            # ุงูุชุญูู ูู ุชุญุฏูุซ ุงูุฅุญุตุงุฆูุงุช
            updated_stats = db_manager.get_export_stats()
            if updated_stats:
                print(f"โ ุงูุทูุจุงุช ุงููุตุฏุฑุฉ ุจุนุฏ ุงูุชุตุฏูุฑ: {updated_stats['exported_invoices']}")
                print(f"โ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ ุจุนุฏ ุงูุชุตุฏูุฑ: {updated_stats['new_invoices']}")
        else:
            print("โ ูุดู ูู ุฅูุดุงุก ุงูููู")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูููู: {e}")
    
    # 5. ุนุฑุถ ููุฎุต ุงููุชุงุฆุฌ
    print("\n5๏ธโฃ ููุฎุต ุงููุชุงุฆุฌ:")
    print("-" * 20)
    
    final_stats = db_manager.get_export_stats()
    if final_stats:
        print(f"๐ ุฅุฌูุงูู ุงูุทูุจุงุช: {final_stats['total_invoices']}")
        print(f"๐ค ุงูุทูุจุงุช ุงููุตุฏุฑุฉ: {final_stats['exported_invoices']}")
        print(f"๐ ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ: {final_stats['new_invoices']}")
        
        if final_stats['total_invoices'] > 0:
            export_percentage = (final_stats['exported_invoices'] / final_stats['total_invoices']) * 100
            print(f"๐ ูุณุจุฉ ุงูุชุตุฏูุฑ: {export_percentage:.1f}%")
    
    print("\n๐ฏ ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงูุฌุฏูุฏุฉ ููุชูู!")

def show_export_history():
    """ุนุฑุถ ุชุงุฑูุฎ ุงูุชุตุฏูุฑ"""
    
    print("\n๐ ุนุฑุถ ุชุงุฑูุฎ ุงูุชุตุฏูุฑ:")
    print("=" * 30)
    
    db_manager = DatabaseManager()
    
    try:
        conn = db_manager.get_connection()
        cursor = conn.cursor()
        
        # ุงูุญุตูู ุนูู ุชุงุฑูุฎ ุงูุชุตุฏูุฑ
        cursor.execute("""
            SELECT export_date, export_type, COUNT(*) as count, exported_by
            FROM exported_invoices 
            GROUP BY export_date, export_type, exported_by
            ORDER BY export_date DESC 
            LIMIT 10
        """)
        
        exports = cursor.fetchall()
        conn.close()
        
        if exports:
            print("๐ ุขุฎุฑ 10 ุนูููุงุช ุชุตุฏูุฑ:")
            for i, (export_date, export_type, count, exported_by) in enumerate(exports, 1):
                print(f"   {i}. {export_date} - {export_type} - {count} ุทูุจ - ุงููุณุชุฎุฏู: {exported_by}")
        else:
            print("โน๏ธ ูุง ุชูุฌุฏ ุนูููุงุช ุชุตุฏูุฑ ูุณุฌูุฉ")
            
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุนุฑุถ ุชุงุฑูุฎ ุงูุชุตุฏูุฑ: {e}")

if __name__ == "__main__":
    print("๐ ุจุฏุก ุงุฎุชุจุงุฑ ููุฒุงุช ุชุญููู ุงูุทูุจุงุช ุงูุฌุฏูุฏุฉ...")
    
    # ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงูุฃุณุงุณูุฉ
    test_shipping_features()
    
    # ุนุฑุถ ุชุงุฑูุฎ ุงูุชุตุฏูุฑ
    show_export_history()
    
    print("\nโ ุงูุชูู ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ!")
